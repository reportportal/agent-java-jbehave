/*
 * Copyright 2021 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java-library'

apply from: "${project.scripts_url}/${project.scripts_branch}/build-quality.gradle"
apply from: "${project.scripts_url}/${project.scripts_branch}/release-commons.gradle"
apply from: "${project.scripts_url}/${project.scripts_branch}/signing.gradle"
apply from: "${project.scripts_url}/${project.scripts_branch}/jacoco.gradle"

project.ext.limits = [
        'instruction': 70,
        'branch'     : 53,
        'line'       : 75,
        'complexity' : 60,
        'method'     : 65,
        'class'      : 90
]

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    api 'com.epam.reportportal:client-java:5.2.13'
    compileOnly ("org.jbehave:jbehave-core:${project.jbehave_version}") {
        exclude group: 'junit'
        exclude group: 'org.junit.vintage'
    }
    implementation 'org.slf4j:slf4j-api:2.0.7'

    testImplementation ("org.jbehave:jbehave-gherkin:${project.jbehave_version}") {
        exclude group: 'junit'
        exclude group: 'org.junit.vintage'
    }
    testImplementation 'com.epam.reportportal:agent-java-test-utils:0.0.6'
    testImplementation 'org.aspectj:aspectjweaver:1.9.19'
    testImplementation 'org.hamcrest:hamcrest-core:2.2'
    testImplementation "org.mockito:mockito-core:${project.mockito_version}"
    testImplementation "org.mockito:mockito-junit-jupiter:${project.mockito_version}"
    testImplementation 'ch.qos.logback:logback-classic:1.3.12'
    testImplementation 'com.epam.reportportal:logger-java-logback:5.2.2'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${project.junit5_version}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${project.junit5_version}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${project.junit5_version}"
    testImplementation "org.junit.platform:junit-platform-launcher:${project.junit5_launcher_version}"
    testImplementation 'org.apache.commons:commons-io:1.3.2'
    testImplementation 'com.squareup.okhttp3:okhttp:4.12.0'
}

test {
    outputs.upToDateWhen { return false }
    useJUnitPlatform()
    maxParallelForks(5) // it's forks - separate JVMs, should not interfere each other
    forkEvery(1)
    doFirst {
        def weaver = configurations.testRuntimeClasspath.find { it.name.contains("aspectjweaver") }
        jvmArgs += "-javaagent:$weaver"
    }
    environment "AGENT_NO_ANALYTICS", "1"
    testLogging.exceptionFormat = 'full'
}

wrapper {
    gradleVersion = '5.4.1'
}

processResources {
    filesMatching('agent.properties') {
        expand(project.properties)
    }
}

build.dependsOn jacocoTestReport
